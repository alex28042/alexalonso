{"ast":null,"code":"const postcssJs = require(\"postcss-js\");\n\nconst postcssPrefix = require('./lib/postcss-prefixer');\n\nconst daisyuiInfo = require(\"../package.json\");\n\nconst colors = require(\"./colors/index\");\n\nconst utilities = require(\"../dist/utilities\");\n\nconst base = require(\"../dist/base\");\n\nconst unstyled = require(\"../dist/unstyled\");\n\nconst unstyledRtl = require(\"../dist/unstyled.rtl\");\n\nconst styled = require(\"../dist/styled\");\n\nconst styledRtl = require(\"../dist/styled.rtl\");\n\nconst utilitiesUnstyled = require(\"../dist/utilities-unstyled\");\n\nconst utilitiesStyled = require(\"../dist/utilities-styled\");\n\nconst themes = require(\"./colors/themes\");\n\nconst colorFunctions = require(\"./colors/functions\");\n\nconst mainFunction = _ref => {\n  let {\n    addBase,\n    addComponents,\n    addUtilities,\n    config,\n    postcss\n  } = _ref;\n  let daisyuiIncludedItems = [];\n  let logs = false;\n\n  if (config(\"daisyui.logs\") != false) {\n    logs = true;\n  }\n\n  if (logs) {\n    console.log();\n    console.log(\"\\x1b[35m%s\\x1b[0m\", \"ðŸŒ¼ daisyUI components \" + daisyuiInfo.version, \"\\x1b[0m\", daisyuiInfo.homepage);\n    console.group();\n  } // inject @base style\n\n\n  if (config(\"daisyui.base\") != false) {\n    addBase(base);\n    daisyuiIncludedItems.push(\"base\");\n  } // inject components\n  // because rollupjs doesn't supprt dynamic require\n\n\n  let file = styled;\n\n  if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    file = unstyled;\n  } else if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") == true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = unstyledRtl;\n  } else if (config(\"daisyui.styled\") != false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"components\");\n    file = styled;\n  } else if (config(\"daisyui.styled\") !== false && config(\"daisyui.rtl\") == true) {\n    daisyuiIncludedItems.push(\"components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = styledRtl;\n  } // add prefix to class names if specified\n\n\n  const prefix = config(\"daisyui.prefix\");\n  let postcssJsProcess;\n\n  if (prefix) {\n    try {\n      postcssJsProcess = postcssJs.sync(postcssPrefix({\n        prefix,\n        ignore: []\n      }));\n    } catch (error) {\n      logs && console.error(`Error occurred and prevent applying the \"prefix\" option:`, error);\n    }\n  }\n\n  const shouldApplyPrefix = prefix && postcssJsProcess;\n\n  if (shouldApplyPrefix) {\n    file = postcssJsProcess(file);\n  }\n\n  addComponents(file);\n  const themeInjector = colorFunctions.injectThemes(addBase, config, themes);\n  themeInjector;\n  daisyuiIncludedItems.push(\"themes[\" + themeInjector.themeOrder.length + \"]\"); // inject @utilities style needed by components\n\n  if (config(\"daisyui.utils\") != false) {\n    addComponents(utilities, {\n      variants: [\"responsive\"]\n    });\n    let toAdd = utilitiesUnstyled; // shadow clone here to avoid mutate the original\n\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n\n    addComponents(toAdd, {\n      variants: [\"responsive\"]\n    });\n    toAdd = utilitiesStyled;\n\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n\n    addComponents(toAdd, {\n      variants: [\"responsive\"]\n    });\n    daisyuiIncludedItems.push(\"utilities\");\n  }\n\n  if (logs) {\n    console.log(\"\\x1b[32m%s\\x1b[0m\", \"âœ”ï¸Ž Including:\", \"\\x1b[0m\", \"\" + daisyuiIncludedItems.join(\", \"));\n    console.log();\n    console.groupEnd();\n  }\n};\n\nmodule.exports = require(\"tailwindcss/plugin\")(mainFunction, {\n  theme: {\n    extend: {\n      colors\n    }\n  }\n});","map":{"version":3,"names":["postcssJs","require","postcssPrefix","daisyuiInfo","colors","utilities","base","unstyled","unstyledRtl","styled","styledRtl","utilitiesUnstyled","utilitiesStyled","themes","colorFunctions","mainFunction","addBase","addComponents","addUtilities","config","postcss","daisyuiIncludedItems","logs","console","log","version","homepage","group","push","file","prefix","postcssJsProcess","sync","ignore","error","shouldApplyPrefix","themeInjector","injectThemes","themeOrder","length","variants","toAdd","join","groupEnd","module","exports","theme","extend"],"sources":["/home/alex/Escritorio/PortaFolio/alexalonso/node_modules/daisyui/src/index.js"],"sourcesContent":["const postcssJs = require(\"postcss-js\")\nconst postcssPrefix = require('./lib/postcss-prefixer')\n\nconst daisyuiInfo = require(\"../package.json\");\nconst colors = require(\"./colors/index\");\nconst utilities = require(\"../dist/utilities\");\nconst base = require(\"../dist/base\");\nconst unstyled = require(\"../dist/unstyled\");\nconst unstyledRtl = require(\"../dist/unstyled.rtl\");\nconst styled = require(\"../dist/styled\");\nconst styledRtl = require(\"../dist/styled.rtl\");\nconst utilitiesUnstyled = require(\"../dist/utilities-unstyled\");\nconst utilitiesStyled = require(\"../dist/utilities-styled\");\nconst themes = require(\"./colors/themes\");\nconst colorFunctions = require(\"./colors/functions\");\n\nconst mainFunction = ({ addBase, addComponents, addUtilities, config, postcss }) => {\n  let daisyuiIncludedItems = [];\n  let logs = false;\n  if (config(\"daisyui.logs\") != false) {\n    logs = true;\n  }\n  if (logs) {\n    console.log();\n    console.log(\n      \"\\x1b[35m%s\\x1b[0m\",\n      \"ðŸŒ¼ daisyUI components \" + daisyuiInfo.version,\n      \"\\x1b[0m\",\n      daisyuiInfo.homepage\n    );\n    console.group();\n  }\n\n  // inject @base style\n  if (config(\"daisyui.base\") != false) {\n    addBase(base);\n    daisyuiIncludedItems.push(\"base\");\n  }\n\n  // inject components\n  // because rollupjs doesn't supprt dynamic require\n  let file = styled;\n  if (config(\"daisyui.styled\") == false && config(\"daisyui.rtl\") != true) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    file = unstyled;\n  } else if (\n    config(\"daisyui.styled\") == false &&\n    config(\"daisyui.rtl\") == true\n  ) {\n    daisyuiIncludedItems.push(\"unstyled components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = unstyledRtl;\n  } else if (\n    config(\"daisyui.styled\") != false &&\n    config(\"daisyui.rtl\") != true\n  ) {\n    daisyuiIncludedItems.push(\"components\");\n    file = styled;\n  } else if (\n    config(\"daisyui.styled\") !== false &&\n    config(\"daisyui.rtl\") == true\n  ) {\n    daisyuiIncludedItems.push(\"components\");\n    console.log(\"\\x1b[36m%s\\x1b[0m\", \" Direction:\", \"\\x1b[0m\", \"RTL\");\n    file = styledRtl;\n  }\n\n  // add prefix to class names if specified\n  const prefix = config(\"daisyui.prefix\")\n  let postcssJsProcess\n  if (prefix) {\n    try {\n      postcssJsProcess = postcssJs.sync(postcssPrefix({ prefix, ignore: [] }))\n    } catch (error) {\n      logs && console.error(`Error occurred and prevent applying the \"prefix\" option:`, error)\n    }\n  }\n  const shouldApplyPrefix = prefix && postcssJsProcess;\n  if (shouldApplyPrefix) {\n    file = postcssJsProcess(file)\n  }\n\n  addComponents(file);\n\n  const themeInjector = colorFunctions.injectThemes(addBase, config, themes)\n  themeInjector;\n\n  daisyuiIncludedItems.push(\"themes[\" + themeInjector.themeOrder.length + \"]\");\n\n  // inject @utilities style needed by components\n  if (config(\"daisyui.utils\") != false) {\n    addComponents(utilities, { variants: [\"responsive\"] });\n\n    let toAdd = utilitiesUnstyled // shadow clone here to avoid mutate the original\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, { variants: [\"responsive\"] });\n\n    toAdd = utilitiesStyled\n    if (shouldApplyPrefix) {\n      toAdd = postcssJsProcess(toAdd);\n    }\n    addComponents(toAdd, { variants: [\"responsive\"] });\n    daisyuiIncludedItems.push(\"utilities\");\n  }\n  if (logs) {\n    console.log(\n      \"\\x1b[32m%s\\x1b[0m\",\n      \"âœ”ï¸Ž Including:\",\n      \"\\x1b[0m\",\n      \"\" + daisyuiIncludedItems.join(\", \")\n    );\n    console.log();\n    console.groupEnd();\n  }\n};\n\nmodule.exports = require(\"tailwindcss/plugin\")(mainFunction, {\n  theme: { extend: { colors } },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}