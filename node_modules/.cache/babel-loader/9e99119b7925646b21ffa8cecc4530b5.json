{"ast":null,"code":"'use strict';\n\nlet list = {\n  split(string, separators, last) {\n    let array = [];\n    let current = '';\n    let split = false;\n    let func = 0;\n    let inQuote = false;\n    let prevQuote = '';\n    let escape = false;\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === '\\\\') {\n        escape = true;\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true;\n        prevQuote = letter;\n      } else if (letter === '(') {\n        func += 1;\n      } else if (letter === ')') {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim());\n        current = '';\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim());\n    return array;\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t'];\n    return list.split(string, spaces);\n  },\n\n  comma(string) {\n    return list.split(string, [','], true);\n  }\n\n};\nmodule.exports = list;\nlist.default = list;","map":{"version":3,"names":["list","split","string","separators","last","array","current","func","inQuote","prevQuote","escape","letter","includes","push","trim","space","spaces","comma","module","exports","default"],"sources":["C:/Users/Michele Ungolo/Desktop/PortaFolio/alexalonso/node_modules/postcss/lib/list.js"],"sourcesContent":["'use strict'\r\n\r\nlet list = {\r\n  split(string, separators, last) {\r\n    let array = []\r\n    let current = ''\r\n    let split = false\r\n\r\n    let func = 0\r\n    let inQuote = false\r\n    let prevQuote = ''\r\n    let escape = false\r\n\r\n    for (let letter of string) {\r\n      if (escape) {\r\n        escape = false\r\n      } else if (letter === '\\\\') {\r\n        escape = true\r\n      } else if (inQuote) {\r\n        if (letter === prevQuote) {\r\n          inQuote = false\r\n        }\r\n      } else if (letter === '\"' || letter === \"'\") {\r\n        inQuote = true\r\n        prevQuote = letter\r\n      } else if (letter === '(') {\r\n        func += 1\r\n      } else if (letter === ')') {\r\n        if (func > 0) func -= 1\r\n      } else if (func === 0) {\r\n        if (separators.includes(letter)) split = true\r\n      }\r\n\r\n      if (split) {\r\n        if (current !== '') array.push(current.trim())\r\n        current = ''\r\n        split = false\r\n      } else {\r\n        current += letter\r\n      }\r\n    }\r\n\r\n    if (last || current !== '') array.push(current.trim())\r\n    return array\r\n  },\r\n\r\n  space(string) {\r\n    let spaces = [' ', '\\n', '\\t']\r\n    return list.split(string, spaces)\r\n  },\r\n\r\n  comma(string) {\r\n    return list.split(string, [','], true)\r\n  }\r\n}\r\n\r\nmodule.exports = list\r\nlist.default = list\r\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAG;EACTC,KAAK,CAACC,MAAD,EAASC,UAAT,EAAqBC,IAArB,EAA2B;IAC9B,IAAIC,KAAK,GAAG,EAAZ;IACA,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIL,KAAK,GAAG,KAAZ;IAEA,IAAIM,IAAI,GAAG,CAAX;IACA,IAAIC,OAAO,GAAG,KAAd;IACA,IAAIC,SAAS,GAAG,EAAhB;IACA,IAAIC,MAAM,GAAG,KAAb;;IAEA,KAAK,IAAIC,MAAT,IAAmBT,MAAnB,EAA2B;MACzB,IAAIQ,MAAJ,EAAY;QACVA,MAAM,GAAG,KAAT;MACD,CAFD,MAEO,IAAIC,MAAM,KAAK,IAAf,EAAqB;QAC1BD,MAAM,GAAG,IAAT;MACD,CAFM,MAEA,IAAIF,OAAJ,EAAa;QAClB,IAAIG,MAAM,KAAKF,SAAf,EAA0B;UACxBD,OAAO,GAAG,KAAV;QACD;MACF,CAJM,MAIA,IAAIG,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;QAC3CH,OAAO,GAAG,IAAV;QACAC,SAAS,GAAGE,MAAZ;MACD,CAHM,MAGA,IAAIA,MAAM,KAAK,GAAf,EAAoB;QACzBJ,IAAI,IAAI,CAAR;MACD,CAFM,MAEA,IAAII,MAAM,KAAK,GAAf,EAAoB;QACzB,IAAIJ,IAAI,GAAG,CAAX,EAAcA,IAAI,IAAI,CAAR;MACf,CAFM,MAEA,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACrB,IAAIJ,UAAU,CAACS,QAAX,CAAoBD,MAApB,CAAJ,EAAiCV,KAAK,GAAG,IAAR;MAClC;;MAED,IAAIA,KAAJ,EAAW;QACT,IAAIK,OAAO,KAAK,EAAhB,EAAoBD,KAAK,CAACQ,IAAN,CAAWP,OAAO,CAACQ,IAAR,EAAX;QACpBR,OAAO,GAAG,EAAV;QACAL,KAAK,GAAG,KAAR;MACD,CAJD,MAIO;QACLK,OAAO,IAAIK,MAAX;MACD;IACF;;IAED,IAAIP,IAAI,IAAIE,OAAO,KAAK,EAAxB,EAA4BD,KAAK,CAACQ,IAAN,CAAWP,OAAO,CAACQ,IAAR,EAAX;IAC5B,OAAOT,KAAP;EACD,CA1CQ;;EA4CTU,KAAK,CAACb,MAAD,EAAS;IACZ,IAAIc,MAAM,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAb;IACA,OAAOhB,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAmBc,MAAnB,CAAP;EACD,CA/CQ;;EAiDTC,KAAK,CAACf,MAAD,EAAS;IACZ,OAAOF,IAAI,CAACC,KAAL,CAAWC,MAAX,EAAmB,CAAC,GAAD,CAAnB,EAA0B,IAA1B,CAAP;EACD;;AAnDQ,CAAX;AAsDAgB,MAAM,CAACC,OAAP,GAAiBnB,IAAjB;AACAA,IAAI,CAACoB,OAAL,GAAepB,IAAf"},"metadata":{},"sourceType":"script"}