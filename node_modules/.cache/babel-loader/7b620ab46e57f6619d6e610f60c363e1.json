{"ast":null,"code":"\"use strict\";\n\nvar uniRegexp = require(\"./uni-regexp\");\n\nvar identifierEscapeRegexp = new RegExp(uniRegexp.identifierEscapeRegexp, \"g\");\n\nfunction escape(str, identifier) {\n  if (str === \"*\") {\n    return \"*\";\n  }\n\n  if (identifier) {\n    return str.replace(identifierEscapeRegexp, \"\\\\$1\");\n  } else {\n    return str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\n  }\n}\n\nfunction stringifyWithoutBeforeAfter(tree) {\n  switch (tree.type) {\n    case \"selectors\":\n      return tree.nodes.map(stringify).join(\",\");\n\n    case \"selector\":\n      return tree.nodes.map(stringify).join(\"\");\n\n    case \"element\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\n\n    case \"class\":\n      return \".\" + escape(tree.name, true);\n\n    case \"id\":\n      return \"#\" + escape(tree.name, true);\n\n    case \"attribute\":\n      return \"[\" + tree.content + \"]\";\n\n    case \"spacing\":\n      return tree.value;\n\n    case \"pseudo-class\":\n      return \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\n\n    case \"nested-pseudo-class\":\n      return \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n\n    case \"pseudo-element\":\n      return \"::\" + escape(tree.name);\n\n    case \"universal\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\n\n    case \"operator\":\n      return tree.operator;\n\n    case \"comment\":\n      return \"/*\" + tree.content + \"*/\";\n\n    case \"invalid\":\n      return tree.value;\n  }\n}\n\nfunction stringify(tree) {\n  var str = stringifyWithoutBeforeAfter(tree);\n\n  if (tree.before) {\n    str = tree.before + str;\n  }\n\n  if (tree.after) {\n    str = str + tree.after;\n  }\n\n  return str;\n}\n\nmodule.exports = stringify;","map":{"version":3,"names":["uniRegexp","require","identifierEscapeRegexp","RegExp","escape","str","identifier","replace","stringifyWithoutBeforeAfter","tree","type","nodes","map","stringify","join","namespace","name","content","value","operator","before","after","module","exports"],"sources":["C:/Users/Michele Ungolo/Desktop/PortaFolio/alexalonso/node_modules/css-selector-tokenizer/lib/stringify.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar uniRegexp = require(\"./uni-regexp\");\r\nvar identifierEscapeRegexp = new RegExp(uniRegexp.identifierEscapeRegexp, \"g\");\r\n\r\nfunction escape(str, identifier) {\r\n\tif(str === \"*\") {\r\n\t\treturn \"*\";\r\n\t}\r\n\tif (identifier) {\r\n\t\treturn str.replace(identifierEscapeRegexp, \"\\\\$1\");\r\n\t} else {\r\n\t\treturn str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\r\n\t}\r\n}\r\n\r\nfunction stringifyWithoutBeforeAfter(tree) {\r\n\tswitch(tree.type) {\r\n\tcase \"selectors\":\r\n\t\treturn tree.nodes.map(stringify).join(\",\");\r\n\tcase \"selector\":\r\n\t\treturn tree.nodes.map(stringify).join(\"\");\r\n\tcase \"element\":\r\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\r\n\tcase \"class\":\r\n\t\treturn \".\" + escape(tree.name, true);\r\n\tcase \"id\":\r\n\t\treturn \"#\" + escape(tree.name, true);\r\n\tcase \"attribute\":\r\n\t\treturn \"[\" + tree.content + \"]\";\r\n\tcase \"spacing\":\r\n\t\treturn tree.value;\r\n\tcase \"pseudo-class\":\r\n\t\treturn \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\r\n\tcase \"nested-pseudo-class\":\r\n\t\treturn \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\r\n\tcase \"pseudo-element\":\r\n\t\treturn \"::\" + escape(tree.name);\r\n\tcase \"universal\":\r\n\t\treturn (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\r\n\tcase \"operator\":\r\n\t\treturn tree.operator;\r\n\tcase \"comment\":\r\n\t\treturn \"/*\" + tree.content + \"*/\";\r\n\tcase \"invalid\":\r\n\t\treturn tree.value;\r\n\t}\r\n}\r\n\r\n\r\nfunction stringify(tree) {\r\n\tvar str = stringifyWithoutBeforeAfter(tree);\r\n\tif(tree.before) {\r\n\t\tstr = tree.before + str;\r\n\t}\r\n\tif(tree.after) {\r\n\t\tstr = str + tree.after;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nmodule.exports = stringify;\r\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAIC,sBAAsB,GAAG,IAAIC,MAAJ,CAAWH,SAAS,CAACE,sBAArB,EAA6C,GAA7C,CAA7B;;AAEA,SAASE,MAAT,CAAgBC,GAAhB,EAAqBC,UAArB,EAAiC;EAChC,IAAGD,GAAG,KAAK,GAAX,EAAgB;IACf,OAAO,GAAP;EACA;;EACD,IAAIC,UAAJ,EAAgB;IACf,OAAOD,GAAG,CAACE,OAAJ,CAAYL,sBAAZ,EAAoC,MAApC,CAAP;EACA,CAFD,MAEO;IACN,OAAOG,GAAG,CAACE,OAAJ,CAAY,wCAAZ,EAAsD,MAAtD,CAAP;EACA;AACD;;AAED,SAASC,2BAAT,CAAqCC,IAArC,EAA2C;EAC1C,QAAOA,IAAI,CAACC,IAAZ;IACA,KAAK,WAAL;MACC,OAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,SAAf,EAA0BC,IAA1B,CAA+B,GAA/B,CAAP;;IACD,KAAK,UAAL;MACC,OAAOL,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,SAAf,EAA0BC,IAA1B,CAA+B,EAA/B,CAAP;;IACD,KAAK,SAAL;MACC,OAAO,CAAC,OAAOL,IAAI,CAACM,SAAZ,KAA0B,QAA1B,GAAqCX,MAAM,CAACK,IAAI,CAACM,SAAN,CAAN,GAAyB,GAA9D,GAAoE,EAArE,IAA2EX,MAAM,CAACK,IAAI,CAACO,IAAN,CAAxF;;IACD,KAAK,OAAL;MACC,OAAO,MAAMZ,MAAM,CAACK,IAAI,CAACO,IAAN,EAAY,IAAZ,CAAnB;;IACD,KAAK,IAAL;MACC,OAAO,MAAMZ,MAAM,CAACK,IAAI,CAACO,IAAN,EAAY,IAAZ,CAAnB;;IACD,KAAK,WAAL;MACC,OAAO,MAAMP,IAAI,CAACQ,OAAX,GAAqB,GAA5B;;IACD,KAAK,SAAL;MACC,OAAOR,IAAI,CAACS,KAAZ;;IACD,KAAK,cAAL;MACC,OAAO,MAAMd,MAAM,CAACK,IAAI,CAACO,IAAN,CAAZ,IAA2B,OAAOP,IAAI,CAACQ,OAAZ,KAAwB,QAAxB,GAAmC,MAAMR,IAAI,CAACQ,OAAX,GAAqB,GAAxD,GAA8D,EAAzF,CAAP;;IACD,KAAK,qBAAL;MACC,OAAO,MAAMb,MAAM,CAACK,IAAI,CAACO,IAAN,CAAZ,GAA0B,GAA1B,GAAgCP,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,SAAf,EAA0BC,IAA1B,CAA+B,GAA/B,CAAhC,GAAsE,GAA7E;;IACD,KAAK,gBAAL;MACC,OAAO,OAAOV,MAAM,CAACK,IAAI,CAACO,IAAN,CAApB;;IACD,KAAK,WAAL;MACC,OAAO,CAAC,OAAOP,IAAI,CAACM,SAAZ,KAA0B,QAA1B,GAAqCX,MAAM,CAACK,IAAI,CAACM,SAAN,CAAN,GAAyB,GAA9D,GAAoE,EAArE,IAA2E,GAAlF;;IACD,KAAK,UAAL;MACC,OAAON,IAAI,CAACU,QAAZ;;IACD,KAAK,SAAL;MACC,OAAO,OAAOV,IAAI,CAACQ,OAAZ,GAAsB,IAA7B;;IACD,KAAK,SAAL;MACC,OAAOR,IAAI,CAACS,KAAZ;EA5BD;AA8BA;;AAGD,SAASL,SAAT,CAAmBJ,IAAnB,EAAyB;EACxB,IAAIJ,GAAG,GAAGG,2BAA2B,CAACC,IAAD,CAArC;;EACA,IAAGA,IAAI,CAACW,MAAR,EAAgB;IACff,GAAG,GAAGI,IAAI,CAACW,MAAL,GAAcf,GAApB;EACA;;EACD,IAAGI,IAAI,CAACY,KAAR,EAAe;IACdhB,GAAG,GAAGA,GAAG,GAAGI,IAAI,CAACY,KAAjB;EACA;;EACD,OAAOhB,GAAP;AACA;;AAEDiB,MAAM,CAACC,OAAP,GAAiBV,SAAjB"},"metadata":{},"sourceType":"script"}