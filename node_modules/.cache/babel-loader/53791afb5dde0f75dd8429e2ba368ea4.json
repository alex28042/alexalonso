{"ast":null,"code":"import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var style = state.style,\n      vars = state.vars,\n      transform = state.transform,\n      transformKeys = state.transformKeys,\n      transformOrigin = state.transformOrigin;\n  transformKeys.length = 0; // Track whether we encounter any transform or transformOrigin values.\n\n  var hasTransform = false;\n  var hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  var transformIsNone = true;\n  /**\r\n   * Loop over all our latest animated values and decide whether to handle them\r\n   * as a style or CSS variable.\r\n   *\r\n   * Transforms and transform origins are kept seperately for further processing.\r\n   */\n\n  for (var key in latestValues) {\n    var value = latestValues[key];\n    /**\r\n     * If this is a CSS variable we don't do any further processing.\r\n     */\n\n    if (isCSSVariable(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    var valueType = numberValueTypes[key];\n    var valueAsType = getValueAsType(value, valueType);\n\n    if (transformProps.has(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key); // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== (valueType.default || 0)) transformIsNone = false;\n    } else if (key.startsWith(\"origin\")) {\n      // If this is a transform origin, flag and enable further transform-origin processing\n      hasTransformOrigin = true;\n      transformOrigin[key] = valueAsType;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (hasTransform || transformTemplate) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (!latestValues.transform && style.transform) {\n    /**\r\n     * If we have previously created a transform but currently don't have any,\r\n     * reset transform style to none.\r\n     */\n    style.transform = \"none\";\n  }\n  /**\r\n   * Build a transformOrigin style. Uses the same defaults as the browser for\r\n   * undefined origins.\r\n   */\n\n\n  if (hasTransformOrigin) {\n    var _transformOrigin$orig = transformOrigin.originX,\n        originX = _transformOrigin$orig === void 0 ? \"50%\" : _transformOrigin$orig,\n        _transformOrigin$orig2 = transformOrigin.originY,\n        originY = _transformOrigin$orig2 === void 0 ? \"50%\" : _transformOrigin$orig2,\n        _transformOrigin$orig3 = transformOrigin.originZ,\n        originZ = _transformOrigin$orig3 === void 0 ? 0 : _transformOrigin$orig3;\n    style.transformOrigin = \"\".concat(originX, \" \").concat(originY, \" \").concat(originZ);\n  }\n}\n\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","isCSSVariable","transformProps","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transform","transformKeys","transformOrigin","length","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","has","push","default","startsWith","originX","originY","originZ"],"sources":["C:/Users/Michele Ungolo/Desktop/PortaFolio/alexalonso/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform } from './build-transform.mjs';\r\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\r\nimport { transformProps } from './transform.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\r\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\r\n    transformKeys.length = 0;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    // Does the calculated transform essentially equal \"none\"?\r\n    let transformIsNone = true;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept seperately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        /**\r\n         * If this is a CSS variable we don't do any further processing.\r\n         */\r\n        if (isCSSVariable(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        // Convert the value to its default value type, ie 0 -> \"0px\"\r\n        const valueType = numberValueTypes[key];\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            transform[key] = valueAsType;\r\n            transformKeys.push(key);\r\n            // If we already know we have a non-default transform, early return\r\n            if (!transformIsNone)\r\n                continue;\r\n            // Otherwise check to see if this is a default transform\r\n            if (value !== (valueType.default || 0))\r\n                transformIsNone = false;\r\n        }\r\n        else if (key.startsWith(\"origin\")) {\r\n            // If this is a transform origin, flag and enable further transform-origin processing\r\n            hasTransformOrigin = true;\r\n            transformOrigin[key] = valueAsType;\r\n        }\r\n        else {\r\n            style[key] = valueAsType;\r\n        }\r\n    }\r\n    if (hasTransform || transformTemplate) {\r\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\r\n    }\r\n    else if (!latestValues.transform && style.transform) {\r\n        /**\r\n         * If we have previously created a transform but currently don't have any,\r\n         * reset transform style to none.\r\n         */\r\n        style.transform = \"none\";\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA8CC,OAA9C,EAAuDC,iBAAvD,EAA0E;EACtE,IAAQC,KAAR,GAAmEJ,KAAnE,CAAQI,KAAR;EAAA,IAAeC,IAAf,GAAmEL,KAAnE,CAAeK,IAAf;EAAA,IAAqBC,SAArB,GAAmEN,KAAnE,CAAqBM,SAArB;EAAA,IAAgCC,aAAhC,GAAmEP,KAAnE,CAAgCO,aAAhC;EAAA,IAA+CC,eAA/C,GAAmER,KAAnE,CAA+CQ,eAA/C;EACAD,aAAa,CAACE,MAAd,GAAuB,CAAvB,CAFsE,CAGtE;;EACA,IAAIC,YAAY,GAAG,KAAnB;EACA,IAAIC,kBAAkB,GAAG,KAAzB,CALsE,CAMtE;;EACA,IAAIC,eAAe,GAAG,IAAtB;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,KAAK,IAAMC,GAAX,IAAkBZ,YAAlB,EAAgC;IAC5B,IAAMa,KAAK,GAAGb,YAAY,CAACY,GAAD,CAA1B;IACA;AACR;AACA;;IACQ,IAAIlB,aAAa,CAACkB,GAAD,CAAjB,EAAwB;MACpBR,IAAI,CAACQ,GAAD,CAAJ,GAAYC,KAAZ;MACA;IACH,CAR2B,CAS5B;;;IACA,IAAMC,SAAS,GAAGjB,gBAAgB,CAACe,GAAD,CAAlC;IACA,IAAMG,WAAW,GAAGnB,cAAc,CAACiB,KAAD,EAAQC,SAAR,CAAlC;;IACA,IAAInB,cAAc,CAACqB,GAAf,CAAmBJ,GAAnB,CAAJ,EAA6B;MACzB;MACAH,YAAY,GAAG,IAAf;MACAJ,SAAS,CAACO,GAAD,CAAT,GAAiBG,WAAjB;MACAT,aAAa,CAACW,IAAd,CAAmBL,GAAnB,EAJyB,CAKzB;;MACA,IAAI,CAACD,eAAL,EACI,SAPqB,CAQzB;;MACA,IAAIE,KAAK,MAAMC,SAAS,CAACI,OAAV,IAAqB,CAA3B,CAAT,EACIP,eAAe,GAAG,KAAlB;IACP,CAXD,MAYK,IAAIC,GAAG,CAACO,UAAJ,CAAe,QAAf,CAAJ,EAA8B;MAC/B;MACAT,kBAAkB,GAAG,IAArB;MACAH,eAAe,CAACK,GAAD,CAAf,GAAuBG,WAAvB;IACH,CAJI,MAKA;MACDZ,KAAK,CAACS,GAAD,CAAL,GAAaG,WAAb;IACH;EACJ;;EACD,IAAIN,YAAY,IAAIP,iBAApB,EAAuC;IACnCC,KAAK,CAACE,SAAN,GAAkBZ,cAAc,CAACM,KAAD,EAAQE,OAAR,EAAiBU,eAAjB,EAAkCT,iBAAlC,CAAhC;EACH,CAFD,MAGK,IAAI,CAACF,YAAY,CAACK,SAAd,IAA2BF,KAAK,CAACE,SAArC,EAAgD;IACjD;AACR;AACA;AACA;IACQF,KAAK,CAACE,SAAN,GAAkB,MAAlB;EACH;EACD;AACJ;AACA;AACA;;;EACI,IAAIK,kBAAJ,EAAwB;IACpB,4BAA2DH,eAA3D,CAAQa,OAAR;IAAA,IAAQA,OAAR,sCAAkB,KAAlB;IAAA,6BAA2Db,eAA3D,CAAyBc,OAAzB;IAAA,IAAyBA,OAAzB,uCAAmC,KAAnC;IAAA,6BAA2Dd,eAA3D,CAA0Ce,OAA1C;IAAA,IAA0CA,OAA1C,uCAAoD,CAApD;IACAnB,KAAK,CAACI,eAAN,aAA2Ba,OAA3B,cAAsCC,OAAtC,cAAiDC,OAAjD;EACH;AACJ;;AAED,SAASxB,eAAT"},"metadata":{},"sourceType":"module"}